// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/page/v1/page.v1.proto

package pagev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PagingMode 分页模式
type PagingMode int32

const (
	// PAGING_NUMBER 页码分页
	PagingMode_PAGING_NUMBER PagingMode = 0
	// PAGING_CURSOR 游标分页
	PagingMode_PAGING_CURSOR PagingMode = 1
)

// Enum value maps for PagingMode.
var (
	PagingMode_name = map[int32]string{
		0: "PAGING_NUMBER",
		1: "PAGING_CURSOR",
	}
	PagingMode_value = map[string]int32{
		"PAGING_NUMBER": 0,
		"PAGING_CURSOR": 1,
	}
)

func (x PagingMode) Enum() *PagingMode {
	p := new(PagingMode)
	*p = x
	return p
}

func (x PagingMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PagingMode) Descriptor() protoreflect.EnumDescriptor {
	return file_api_page_v1_page_v1_proto_enumTypes[0].Descriptor()
}

func (PagingMode) Type() protoreflect.EnumType {
	return &file_api_page_v1_page_v1_proto_enumTypes[0]
}

func (x PagingMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PagingMode.Descriptor instead.
func (PagingMode) EnumDescriptor() ([]byte, []int) {
	return file_api_page_v1_page_v1_proto_rawDescGZIP(), []int{0}
}

// PageRequest 分页请求
type PageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// page 第几页；默认第一页
	Page uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// page_size 每页显示多少条(默认：15)
	PageSize uint32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// order_by_array 排序；例：["id-desc", "created_time-asc"]
	OrderByArray []*PagingOrder `protobuf:"bytes,3,rep,name=order_by_array,json=orderByArray,proto3" json:"order_by_array,omitempty"`
}

func (x *PageRequest) Reset() {
	*x = PageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_page_v1_page_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageRequest) ProtoMessage() {}

func (x *PageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_page_v1_page_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageRequest.ProtoReflect.Descriptor instead.
func (*PageRequest) Descriptor() ([]byte, []int) {
	return file_api_page_v1_page_v1_proto_rawDescGZIP(), []int{0}
}

func (x *PageRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PageRequest) GetOrderByArray() []*PagingOrder {
	if x != nil {
		return x.OrderByArray
	}
	return nil
}

// PageInfo 分页信息
type PageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// total_number 总条数
	TotalNumber int64 `protobuf:"varint,1,opt,name=total_number,json=totalNumber,proto3" json:"total_number,omitempty"`
	// total_page 总页数
	TotalPage int64 `protobuf:"varint,2,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`
	// page 第几页
	Page uint32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// page_size 每页显示多少条
	PageSize uint32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *PageInfo) Reset() {
	*x = PageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_page_v1_page_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo) ProtoMessage() {}

func (x *PageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_page_v1_page_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo.ProtoReflect.Descriptor instead.
func (*PageInfo) Descriptor() ([]byte, []int) {
	return file_api_page_v1_page_v1_proto_rawDescGZIP(), []int{1}
}

func (x *PageInfo) GetTotalNumber() int64 {
	if x != nil {
		return x.TotalNumber
	}
	return 0
}

func (x *PageInfo) GetTotalPage() int64 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *PageInfo) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageInfo) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// PagingOrder 分页排序(例子：order by id desc)
type PagingOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// column 排序的字段(例子：id)
	Column string `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	// direction 排序的方向(例子：desc)
	Direction string `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`
}

func (x *PagingOrder) Reset() {
	*x = PagingOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_page_v1_page_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingOrder) ProtoMessage() {}

func (x *PagingOrder) ProtoReflect() protoreflect.Message {
	mi := &file_api_page_v1_page_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingOrder.ProtoReflect.Descriptor instead.
func (*PagingOrder) Descriptor() ([]byte, []int) {
	return file_api_page_v1_page_v1_proto_rawDescGZIP(), []int{2}
}

func (x *PagingOrder) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *PagingOrder) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

// CursorRequest 游标分页请求
type CursorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// current_page 当前在第几页(默认：0)
	CurrentPage uint32 `protobuf:"varint,1,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	// page 跳转到第几页(默认：1)
	Page uint32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// cursor_column 游标模式的字段名(默认：id)
	CursorColumn string `protobuf:"bytes,3,opt,name=cursor_column,json=cursorColumn,proto3" json:"cursor_column,omitempty"`
	// cursor_direction 游标模式的排序方式(默认：desc)
	CursorDirection string `protobuf:"bytes,4,opt,name=cursor_direction,json=cursorDirection,proto3" json:"cursor_direction,omitempty"`
	// cursor_value  游标模式的值
	CursorValue float64 `protobuf:"fixed64,5,opt,name=cursor_value,json=cursorValue,proto3" json:"cursor_value,omitempty"`
}

func (x *CursorRequest) Reset() {
	*x = CursorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_page_v1_page_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CursorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorRequest) ProtoMessage() {}

func (x *CursorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_page_v1_page_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorRequest.ProtoReflect.Descriptor instead.
func (*CursorRequest) Descriptor() ([]byte, []int) {
	return file_api_page_v1_page_v1_proto_rawDescGZIP(), []int{3}
}

func (x *CursorRequest) GetCurrentPage() uint32 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *CursorRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CursorRequest) GetCursorColumn() string {
	if x != nil {
		return x.CursorColumn
	}
	return ""
}

func (x *CursorRequest) GetCursorDirection() string {
	if x != nil {
		return x.CursorDirection
	}
	return ""
}

func (x *CursorRequest) GetCursorValue() float64 {
	if x != nil {
		return x.CursorValue
	}
	return 0
}

// CursorInfo 游标分页信息
type CursorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// total_number 总记录数
	TotalNumber uint32 `protobuf:"varint,1,opt,name=total_number,json=totalNumber,proto3" json:"total_number,omitempty"`
	// total_page 总页码数
	TotalPage uint32 `protobuf:"varint,2,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`
	// page 第几页
	Page uint32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// page_size 每页显示多少条
	PageSize uint32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// cursor_column 游标模式的字段名(默认：id)
	CursorColumn string `protobuf:"bytes,200,opt,name=cursor_column,json=cursorColumn,proto3" json:"cursor_column,omitempty"`
	// cursor_direction 游标模式的排序方式(默认：desc)
	CursorDirection string `protobuf:"bytes,201,opt,name=cursor_direction,json=cursorDirection,proto3" json:"cursor_direction,omitempty"`
	// cursor_value  游标模式的值
	CursorValue float64 `protobuf:"fixed64,202,opt,name=cursor_value,json=cursorValue,proto3" json:"cursor_value,omitempty"`
}

func (x *CursorInfo) Reset() {
	*x = CursorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_page_v1_page_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CursorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorInfo) ProtoMessage() {}

func (x *CursorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_page_v1_page_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorInfo.ProtoReflect.Descriptor instead.
func (*CursorInfo) Descriptor() ([]byte, []int) {
	return file_api_page_v1_page_v1_proto_rawDescGZIP(), []int{4}
}

func (x *CursorInfo) GetTotalNumber() uint32 {
	if x != nil {
		return x.TotalNumber
	}
	return 0
}

func (x *CursorInfo) GetTotalPage() uint32 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *CursorInfo) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CursorInfo) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *CursorInfo) GetCursorColumn() string {
	if x != nil {
		return x.CursorColumn
	}
	return ""
}

func (x *CursorInfo) GetCursorDirection() string {
	if x != nil {
		return x.CursorDirection
	}
	return ""
}

func (x *CursorInfo) GetCursorValue() float64 {
	if x != nil {
		return x.CursorValue
	}
	return 0
}

var File_api_page_v1_page_v1_proto protoreflect.FileDescriptor

var file_api_page_v1_page_v1_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x76, 0x31, 0x22, 0x82, 0x01, 0x0a,
	0x0b, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x42, 0x0a,
	0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x61, 0x67, 0x65, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x22, 0x7d, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x43, 0x0a, 0x0b, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb9, 0x01, 0x0a, 0x0d, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x5f, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0xf5, 0x01, 0x0a, 0x0a, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x5f, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xc9, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0xca, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2a, 0x32, 0x0a, 0x0a, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x41, 0x47, 0x49, 0x4e,
	0x47, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x41,
	0x47, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x55, 0x52, 0x53, 0x4f, 0x52, 0x10, 0x01, 0x42, 0x47, 0x0a,
	0x0f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x76, 0x31,
	0x50, 0x01, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69,
	0x6b, 0x61, 0x69, 0x67, 0x75, 0x61, 0x6e, 0x67, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x72, 0x76, 0x2d,
	0x6b, 0x69, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x3b,
	0x70, 0x61, 0x67, 0x65, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_page_v1_page_v1_proto_rawDescOnce sync.Once
	file_api_page_v1_page_v1_proto_rawDescData = file_api_page_v1_page_v1_proto_rawDesc
)

func file_api_page_v1_page_v1_proto_rawDescGZIP() []byte {
	file_api_page_v1_page_v1_proto_rawDescOnce.Do(func() {
		file_api_page_v1_page_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_page_v1_page_v1_proto_rawDescData)
	})
	return file_api_page_v1_page_v1_proto_rawDescData
}

var file_api_page_v1_page_v1_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_page_v1_page_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_page_v1_page_v1_proto_goTypes = []interface{}{
	(PagingMode)(0),       // 0: api.page.pagev1.PagingMode
	(*PageRequest)(nil),   // 1: api.page.pagev1.PageRequest
	(*PageInfo)(nil),      // 2: api.page.pagev1.PageInfo
	(*PagingOrder)(nil),   // 3: api.page.pagev1.PagingOrder
	(*CursorRequest)(nil), // 4: api.page.pagev1.CursorRequest
	(*CursorInfo)(nil),    // 5: api.page.pagev1.CursorInfo
}
var file_api_page_v1_page_v1_proto_depIdxs = []int32{
	3, // 0: api.page.pagev1.PageRequest.order_by_array:type_name -> api.page.pagev1.PagingOrder
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_page_v1_page_v1_proto_init() }
func file_api_page_v1_page_v1_proto_init() {
	if File_api_page_v1_page_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_page_v1_page_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_page_v1_page_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_page_v1_page_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_page_v1_page_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CursorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_page_v1_page_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CursorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_page_v1_page_v1_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_page_v1_page_v1_proto_goTypes,
		DependencyIndexes: file_api_page_v1_page_v1_proto_depIdxs,
		EnumInfos:         file_api_page_v1_page_v1_proto_enumTypes,
		MessageInfos:      file_api_page_v1_page_v1_proto_msgTypes,
	}.Build()
	File_api_page_v1_page_v1_proto = out.File
	file_api_page_v1_page_v1_proto_rawDesc = nil
	file_api_page_v1_page_v1_proto_goTypes = nil
	file_api_page_v1_page_v1_proto_depIdxs = nil
}
