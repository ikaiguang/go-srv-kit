syntax = "proto3";

package kit.api.conf.confv1;

option go_package = "github.com/ikaiguang/go-srv-kit/api/conf/v1;confv1";
option java_multiple_files = true;
option java_package = "kit.api.conf.confv1";
option java_outer_classname = "KitApiConfV1";

import "google/protobuf/duration.proto";

// Bootstrap 配置引导
message Bootstrap {
  // app application
  App app = 1;
  // log 日志
  Log log = 2;
  // data 数据
  Data data = 3;
  // server 服务
  Server server = 4;
}

// App application
message App {
  // name app名字
  string name = 1;
  // version app版本
  string version = 2;
  // env app 环境
  string env = 3;
  // endpoints app站点
  repeated string endpoints = 4;
  // metadata 元数据
  map<string, string> metadata = 5;
}

// Log 日志
message Log {
  // Console 输出到控制台
  message Console {
    // enable 是否启用
    bool enable = 1;
    // level 日志级别；DEBUG、INFO、WARN、ERROR、FATAL
    string level = 2;
  }
  // File 输出到文件
  message File {
    // enable 是否启用
    bool enable = 1;
    // level 日志级别；DEBUG、INFO、WARN、ERROR、FATAL
    string level = 2;

    // dir 存储目录
    string dir = 3;
    // filename 文件名(默认：${filename}_app.%Y%m%d%H%M%S.log)
    string filename = 4;

    // rotate_time 轮询规则：n久(默认：86400s # 86400s = 1天)
    // 轮询规则：默认为：rotate_time
    google.protobuf.Duration rotate_time = 5;
    // rotate_size 轮询规则：按文件大小(默认：52428800 # 50<<20 = 50M)
    // 轮询规则：默认为：rotate_time
    int64 rotate_size = 6;

    // storage_age 存储n久(默认：2592000s = 30天)
    // 存储规则：默认为：storage_age
    google.protobuf.Duration storage_age = 8;
    // storage_counter 存储：n个 或 有效期storage_age(默认：2592000s = 30天)
    // 存储规则：默认为：storage_age
    uint32 storage_counter = 7;
  }

  // console 输出到控制台
  Console console = 1;
  // file 输出到文件
  File file = 2;
}

// Data 数据
message Data {
  // MySQL MySQL
  message MySQL {
    string dsn = 1;
    // conn_max_idle_time 设置连接空闲的最长时间
    google.protobuf.Duration  slow_threshold = 2;
    bool logger_enable = 3;
    bool logger_colorful = 4;
    // logger_level 日志级别；值：DEBUG、INFO、WARN、ERROR、FATAL
    string logger_level = 5;
    // conn_max_active 连接可复用的最大时间
    uint32  conn_max_active = 6;
    // conn_max_lifetime 可复用的最大时间
    google.protobuf.Duration  conn_max_lifetime = 7;
    // conn_max_idle 连接池中空闲连接的最大数量
    uint32  conn_max_idle = 8;
    // conn_max_idle_time 设置连接空闲的最长时间
    google.protobuf.Duration  conn_max_idle_time = 9;
  }
  // Redis redis
  message Redis {
    string addr = 1;
    string username = 2;
    string password = 3;
    uint32 db = 4;
    google.protobuf.Duration dial_timeout = 5;
    google.protobuf.Duration read_timeout = 6;
    google.protobuf.Duration write_timeout = 7;
    // conn_max_active 连接的最大数量
    uint32  conn_max_active = 8;
    // conn_max_lifetime 连接可复用的最大时间
    google.protobuf.Duration  conn_max_lifetime = 9;
    // conn_max_idle 连接池中空闲连接的最大数量
    uint32  conn_max_idle = 10;
    // conn_max_idle_time 设置连接空闲的最长时间
    google.protobuf.Duration  conn_max_idle_time = 11;
  }
  // PSQL postgres
  message PSQL {
    string dsn = 1;
    // conn_max_idle_time 设置连接空闲的最长时间
    google.protobuf.Duration  slow_threshold = 2;
    bool logger_enable = 3;
    bool logger_colorful = 4;
    // logger_level 日志级别；值：DEBUG、INFO、WARN、ERROR、FATAL
    string logger_level = 5;
    // conn_max_active 连接可复用的最大时间
    uint32  conn_max_active = 6;
    // conn_max_lifetime 可复用的最大时间
    google.protobuf.Duration  conn_max_lifetime = 7;
    // conn_max_idle 连接池中空闲连接的最大数量
    uint32  conn_max_idle = 8;
    // conn_max_idle_time 设置连接空闲的最长时间
    google.protobuf.Duration  conn_max_idle_time = 9;
  }
  MySQL mysql = 1;
  Redis redis = 2;
  PSQL psql = 3;
}

// Server 服务
message Server {
  // HTTP http服务配置
  message HTTP {
    // network 网络
    string network = 1;
    // addr 地址
    string addr = 2;
    // timeout 超时时间
    google.protobuf.Duration timeout = 3;
  }
  // GRPC grpc服务配置
  message GRPC {
    // network 网络
    string network = 1;
    // addr 地址
    string addr = 2;
    // timeout 超时时间
    google.protobuf.Duration timeout = 3;
  }
  // http http服务配置
  HTTP http = 1;
  // grpc grpc服务配置
  GRPC grpc = 2;
}